<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize

// @version: exTimer 1.0.2

// properties
_ex_timers = -1;
_ex_timer_classes = -1;
_ex_timer_debug_mode = false;
_suspended = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update timers

if (_suspended == true) {
    exit;
}

var _ex_timer_count = ex_timer_count();

for (var _i=0; _i &lt; _ex_timer_count; ++_i) {

    var _name = ds_grid_get(_ex_timers, 0, _i);

    var _y = ds_grid_value_y(_ex_timers, 0, 0, 1, ds_grid_height(_ex_timers), _name);
    
    if (_y &lt; 0) {
        continue;
    }
    
    // check paused or playing states
    if (ds_grid_get(_ex_timers, 5, _y) == true or not ds_grid_get(_ex_timers, 4, _y) == true) {
        continue;
    }
    
    var _timer_position = ds_grid_get(_ex_timers, 1, _y);
    var _timer_duration = ds_grid_get(_ex_timers, 8, _y);
    var _timer_loop     = ds_grid_get(_ex_timers, 9, _y);
    var _timer_speed    = ds_grid_get(_ex_timers, 2, _y);
    
    _timer_position -= _timer_speed;
    
    if (_timer_position &lt; 0) {
    
        _timer_position = -1;
    
        // set position
        ds_grid_set(_ex_timers, 1, _y, -1); 
        
        // if timer is playing
        if (ds_grid_get(_ex_timers, 4, _y) == true) {
            // get script
            var _script = ds_grid_get(_ex_timers, 7, _y);
            if (_script &gt; -1) {
                script_execute(_script);
            }
        }
        
        if (_timer_loop == true) {
            _timer_position = _timer_duration;
        } else {
    
            // stop timer
            
            // set position
            ds_grid_set(_ex_timers, 1, _y, -1);
            
            // set playing state
            ds_grid_set(_ex_timers, 4, _y, false);
            
            // set paused state
            ds_grid_set(_ex_timers, 5, _y, false);
            
            // set loop
            ds_grid_set(_ex_timers, 9, _y, false);
            
            if (ex_timer_get_debug_mode()) {
                show_debug_message('exTimer: Timer with name: "'+string( _name )+'" has triggered');
            }
            
            continue;
        }
    }
    
    ds_grid_set(_ex_timers, 1, _y, floor(_timer_position)); 
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
